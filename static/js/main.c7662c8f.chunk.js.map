{"version":3,"sources":["API/env.js","API/api.js","Components/CreateAccount.js","API/actionCable.js","Components/Game.js","Components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["domain","url","createUser","name","birthday","fetch","method","headers","body","JSON","stringify","user","then","response","json","data","localStorage","setItem","CreateAccount","changeUserName","changeUserBirthday","newUserCreate","event","a","preventDefault","target","elements","value","newUser","onSubmit","htmlFor","type","cable","ActionCable","createConsumer","Game","useEffect","subscriptions","create","channel","received","console","log","Main","useState","getItem","userName","userBirthday","currentComponenet","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAAaA,EAC6B,iDAE7BC,EAAG,UADyC,QACzC,cAAoBD,GCD7B,SAASE,EAAWC,EAAMC,GAC/B,OAAOC,MAAM,GAAD,OAAIJ,EAAJ,UAAiB,CAC3BK,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEC,KAAM,CAAER,OAAMC,gBAEpCQ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAGL,OAFAC,aAAaC,QAAQ,WAAYF,EAAKZ,MACtCa,aAAaC,QAAQ,eAAgBF,EAAKX,UACnCW,K,WCaEG,EAxBO,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,eAAgBC,EAAyB,EAAzBA,mBACjCC,EAAa,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACpBD,EAAME,iBADc,EAEKF,EAAMG,OAAOC,SAAhCvB,EAFc,EAEdA,KAAMC,EAFQ,EAERA,SAFQ,SAIEF,EAAWC,EAAKwB,MAAOvB,EAASuB,OAJlC,OAIdC,EAJc,OAKpBT,EAAeS,EAAQzB,MACvBiB,EAAmBQ,EAAQxB,UANP,2CAAH,sDASnB,OACE,gCACE,kDACA,uBAAMyB,SAAUR,EAAhB,UACE,uBAAOS,QAAQ,OAAf,kBACA,uBAAOC,KAAK,OAAO5B,KAAK,SACxB,uBAAO2B,QAAQ,WAAf,yBACA,uBAAOC,KAAK,OAAO5B,KAAK,aACxB,iD,OCnBF6B,E,OAAQC,EAAYC,eAAZ,eAAmClC,EAAnC,WCCd,IAQemC,EARF,WAKX,OAJAC,qBAAU,WDAVJ,EAAMK,cAAcC,OAClB,CAAEC,QAAS,eACX,CACEC,SADF,SACWzB,GACP0B,QAAQC,IAAI,WAAY3B,QCF3B,IAEI,8CCaM4B,EAlBF,WAAO,IAAD,EACkBC,mBAAS5B,aAAa6B,QAAQ,aADhD,mBACVC,EADU,KACA3B,EADA,OAE0ByB,mBAAS5B,aAAa6B,QAAQ,iBAFxD,mBAEVE,EAFU,KAEI3B,EAFJ,KAIjBgB,qBAAU,WACHU,GAAaC,GAChBN,QAAQC,IAAI,0BAEb,IAEH,IAAMM,EAAoBF,EACxB,cAAC,EAAD,IAEA,cAAC,EAAD,CAAe3B,eAAgBA,EAAgBC,mBAAoBA,IAErE,OAAO,8BAAM4B,KCXAC,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxC,MAAK,YAAkD,IAA/CyC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c7662c8f.chunk.js","sourcesContent":["export const domain =\n  process.env.NODE_ENV === \"production\" ? \"get-to-know-you.us-west-2.elasticbeanstalk.com\" : \"localhost:3001\"\nconst protocol = process.env.NODE_ENV === \"production\" ? \"https\" : \"http\"\nexport const url = `${protocol}://${domain}`\n","import { url } from \"./env\"\n\nexport function createUser(name, birthday) {\n  return fetch(`${url}/users`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ user: { name, birthday } }),\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      localStorage.setItem(\"userName\", data.name)\n      localStorage.setItem(\"userBirthday\", data.birthday)\n      return data\n    })\n}\n","import React from \"react\"\nimport { createUser } from \"../API/api\"\n\nconst CreateAccount = ({ changeUserName, changeUserBirthday }) => {\n  const newUserCreate = async (event) => {\n    event.preventDefault()\n    let { name, birthday } = event.target.elements\n\n    const newUser = await createUser(name.value, birthday.value)\n    changeUserName(newUser.name)\n    changeUserBirthday(newUser.birthday)\n  }\n\n  return (\n    <div>\n      <span>Join the game!</span>\n      <form onSubmit={newUserCreate}>\n        <label htmlFor=\"name\">Name</label>\n        <input type=\"text\" name=\"name\" />\n        <label htmlFor=\"birthday\"> Birth Year</label>\n        <input type=\"text\" name=\"birthday\" />\n        <button>Join</button>\n      </form>\n    </div>\n  )\n}\n\nexport default CreateAccount\n","import ActionCable from \"actioncable\"\nimport { domain } from \"./env\"\nconst cable = ActionCable.createConsumer(`ws://${domain}/cable`)\nexport function connectToCable() {\n  cable.subscriptions.create(\n    { channel: \"GameChannel\" },\n    {\n      received(data) {\n        console.log(\"received\", data)\n      },\n    }\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport { connectToCable } from \"../API/actionCable\"\n\nconst Game = () => {\n  useEffect(() => {\n    connectToCable()\n  }, [])\n\n  return <div>Play games</div>\n}\n\nexport default Game\n","import React, { useState, useEffect } from \"react\"\nimport CreateAccount from \"./CreateAccount\"\nimport Game from \"./Game\"\nconst Main = () => {\n  const [userName, changeUserName] = useState(localStorage.getItem(\"userName\"))\n  const [userBirthday, changeUserBirthday] = useState(localStorage.getItem(\"userBirthday\"))\n\n  useEffect(() => {\n    if (!userName && !userBirthday) {\n      console.log(\"No user credentials!\")\n    }\n  }, [])\n\n  const currentComponenet = userName ? (\n    <Game />\n  ) : (\n    <CreateAccount changeUserName={changeUserName} changeUserBirthday={changeUserBirthday} />\n  )\n  return <div>{currentComponenet}</div>\n}\n\nexport default Main\n","import \"./App.css\"\nimport Main from \"./Components/Main\"\n\nfunction App() {\n  return <Main />\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}